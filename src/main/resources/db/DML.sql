CREATE TABLE ACCOUNTS(
                         ID SERIAL PRIMARY KEY,
                         NAME VARCHAR(50) NOT NULL
);

CREATE UNIQUE INDEX ACCOUNTS_NAME ON ACCOUNTS (NAME);

CREATE TABLE USERS(
                      ID SERIAL PRIMARY KEY,
                      IDENTIFIER VARCHAR(320) NOT NULL,
                      PASSWORD VARCHAR(60) NOT NULL,
                      WEB_CLIENT BOOLEAN NOT NULL DEFAULT FALSE
);

CREATE UNIQUE INDEX USERS_IDENTIFIER ON USERS (IDENTIFIER);

CREATE TABLE ROLES (
                       ID SERIAL PRIMARY KEY,
                       NAME VARCHAR(50) NOT NULL
);

INSERT INTO ROLES (NAME) VALUES ('Owner'), ('Contributor');

CREATE TABLE ACCOUNTS_USERS (
                                ID SERIAL PRIMARY KEY,
                                ACCOUNT_ID INT NOT NULL REFERENCES ACCOUNTS (ID),
                                USER_ID INT NOT NULL REFERENCES USERS (ID),
                                ROLE_ID INT NOT NULL REFERENCES ROLES (ID)
);


CREATE TABLE PROJECTS(
                         ID SERIAL PRIMARY KEY,
                         NAME VARCHAR(50) NOT NULL,
                         ACCOUNT_ID INT NOT NULL REFERENCES ACCOUNTS (ID)
);

CREATE INDEX PROJECT_ACCOUNT_ID ON PROJECTS (ACCOUNT_ID);

CREATE TABLE ENVIRONMENTS(
                             ID SERIAL PRIMARY KEY,
                             NAME VARCHAR(50) NOT NULL,
                             MAIN BOOLEAN NOT NULL DEFAULT FALSE,
                             PROJECT_ID INT NOT NULL REFERENCES PROJECTS (ID),
                             USER_ID INT REFERENCES USERS (ID)
);

CREATE INDEX ENVIRONMENT_PROJECT_ID ON ENVIRONMENTS (PROJECT_ID);
CREATE UNIQUE INDEX ENVIRONMENT_PROJECT_ID_MAIN ON ENVIRONMENTS (PROJECT_ID, MAIN);

CREATE TABLE FEATURE_FLAGS(
                              ID SERIAL PRIMARY KEY,
                              NAME VARCHAR(50) NOT NULL,
                              VALUE BOOLEAN NOT NULL DEFAULT FALSE,
                              ENVIRONMENT_ID INT NOT NULL REFERENCES ENVIRONMENTS (ID)
);

CREATE UNIQUE INDEX FEATURE_FLAGS_ENVIRONMENT_ID ON FEATURE_FLAGS (NAME, ENVIRONMENT_ID);

-- Maybe instead of inner joining we should create from x to y, this is just to make ouw work easier but i do not think it is the best performance
CREATE VIEW USER_FEATURE_FLAG AS
SELECT
U.ID AS USER_ID, A.ID AS ACCOUNT_ID, P.ID AS PROJECT_ID, E.ID AS ENVIRONMENT_ID, FF.ID AS FEATURE_FLAG_ID,
U.IDENTIFIER AS USER_IDENTIFIER, A.NAME AS ACCOUNT_NAME, P.NAME AS PROJECT_NAME, E.NAME AS ENVIRONMENTNAME, FF.NAME AS FEATURE_FLAG_NAME,
FROM USERS U
LEFT JOIN ACCOUNTS_USERS AU ON AU.USER_ID  = U.ID
LEFT JOIN ACCOUNTS A ON A.ID = AU.ACCOUNT_ID
LEFT JOIN PROJECTS P ON P.ACCOUNT_ID = A.ID
LEFT JOIN ENVIRONMENTS E ON E.PROJECT_ID = P.ID
LEFT JOIN FEATURE_FLAGS FF ON FF.ENVIRONMENT_ID = E.ID
